%%
close all; clear all; clc;
%wejscia do sieci oraz minimalne oraz maksymalne wartosci wejsc
start = [0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;];
%wyjscia sieci (maksymalna ilosc wyjsc)
wyjscia_s = 1;
net = newlin(start, wyjscia_s); %metoda 1
%net = newp(start, wyjscia_s); %metoda 2
%kolumnowa reprezentacja binarna pierwszych 10 liter alfabetu dla tablicy 5x5
%A a B b C c D d E e F f H h I i K k L l
WEJSCIE = [0 0 1 1 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1;
1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0;
1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0;
1 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 0;
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;
1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1;
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0;
0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0;
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;
1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1;
1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0;
1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 1 0 0;
1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0;
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0;
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0;
0 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0;
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;
1 0 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1;
0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1;
0 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1;
0 1 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0;
1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;];
7
%A a B b C c D d E e F f H h I i K k L l
WYJSCIE = [1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0];
%parametry treningu sieci
net.trainParam.epochs = 10000; %maksymalna ilosc epok
net.trainParam.goal = 0.01; %blad sredniokwadratowy
net.trainParam.mu = 0.001; %wspolczynnik uczenia sieci
%uczenie sieci (train)
net = train(net, WEJSCIE, WYJSCIE);
%dane testowe
A_testowe = [0; 1; 1; 1; 0;
1; 0; 0; 0; 1;
1; 1; 1; 1; 1;
1; 0; 0; 0; 1;
1; 0; 0; 0; 1];
a_testowe = [0; 1; 1; 0; 0;
0; 0; 0; 1; 0;
0; 1; 1; 1; 0;
1; 0; 0; 1; 0;
0; 1; 1; 1; 1];
B_testowe = [1; 1; 1; 0; 0;
1; 0; 0; 1; 0;
1; 1; 1; 0; 0;
1; 0; 0; 1; 0;
1; 1; 1; 0; 0];
b_testowe = [1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 1; 1; 0; 0;
1; 0; 0; 1; 0;
1; 1; 1; 0; 0];
C_testowe = [0; 1; 1; 1; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
0; 1; 1; 1; 0];
c_testowe = [0; 0; 0; 0; 0;
0; 0; 0; 0; 0;
0; 1; 1; 0; 0;
1; 0; 0; 0; 0;
0; 1; 1; 0; 0];
D_testowe = [1; 1; 1; 0; 0;
1; 0; 0; 1; 0;
1; 0; 0; 1; 0;
1; 0; 0; 1; 0;
1; 1; 1; 0; 0];
d_testowe = [0; 0; 0; 1; 0;
0; 0; 0; 1; 0;
0; 1; 1; 1; 0;
1; 0; 0; 1; 0;
0; 1; 1; 1; 0];
E_testowe = [1; 1; 1; 1; 0;
1; 0; 0; 0; 0;
1; 1; 1; 0; 0;
1; 0; 0; 0; 0;
1; 1; 1; 1; 0];
8
e_testowe = [0; 1; 1; 0; 0;
1; 0; 0; 1; 0;
1; 1; 1; 0; 0;
1; 0; 0; 0; 0;
0; 1; 1; 0; 0];
F_testowe = [1; 1; 1; 1; 0;
1; 0; 0; 0; 0;
1; 1; 1; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0];
f_testowe = [0; 1; 1; 0; 0;
1; 0; 0; 0; 0;
1; 1; 1; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0];
H_testowe = [1; 0; 0; 0; 1;
1; 0; 0; 0; 1;
1; 1; 1; 1; 1;
1; 0; 0; 0; 1;
1; 0; 0; 0; 1];
h_testowe = [1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 1; 1; 0; 0;
1; 0; 1; 0; 0;
1; 0; 1; 0; 0];
I_testowe = [1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0];
i_testowe = [1; 0; 0; 0; 0;
0; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0];
K_testowe = [1; 0; 0; 1; 0;
1; 0; 1; 0; 0;
1; 1; 0; 0; 0;
1; 0; 1; 0; 0;
1; 0; 0; 1; 0];
k_testowe = [1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 1; 0; 0;
1; 1; 0; 0; 0;
1; 0; 1; 0; 0];
L_testowe = [1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 1; 1; 1; 0];
l_testowe = [1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 0; 0; 0; 0;
1; 1; 1; 0; 0];
9
%testowanie dzialania sieci
efekt = sim(net, A_testowe)
%wypisanie wyniku uczenia przez siec
if round(efekt) == 0
disp('Mala litera');
else
disp('Duza litera');
end